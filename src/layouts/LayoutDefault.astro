---
import "~/styles/index.css";
// https://sivan.github.io/heti
import "~/styles/heti.min.css";
import Header from "~/components/Header.astro";
import Footer from "~/components/Footer.astro";
import { ClientRouter } from 'astro:transitions';
import { SEO } from "astro-seo";
import { getImage } from "astro:assets";

interface Props {
  title?: string;
  desc?: string;
  banner?: ImageMetadata | string;
}

const props = Astro.props;
const themeConfig = Astro.locals.config;

const title = props.title ?? themeConfig.title;
const desc = props.desc ?? themeConfig.desc;
const canonical = themeConfig.website;

let optimizedImage = new URL("/placeholder.png", Astro.url).toString()

if (props.banner) {
  if (typeof props.banner === "string" && props.banner.startsWith("http")) {
    optimizedImage = props.banner;
  } else {
    const image = await getImage({
      src: props.banner,
      format: "jpeg",
      /*width:
        Math.max(props.banner.width, props.banner.height) > 4096
          ? props.banner.width >= props.banner.height
            ? 4096
            : props.banner.width * (4096.0 / props.banner.height)
          : props.banner.width,
      height:
        Math.max(props.banner.width, props.banner.height) > 4096
          ? props.banner.height >= props.banner.width
            ? 4096
            : props.banner.height * (4096.0 / props.banner.width)
          : props.banner.height,*/
    });
    optimizedImage = new URL(image.src, Astro.url).toString();
  }
}
---

<html lang="zh-hk">
  <head>
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <ClientRouter />
    <SEO
      charset="utf-8"
      title={title}
      description={desc}
      extend={{
        link: [{ rel: "icon", href: "/favicon.jpg" }],
        meta: [
          { name: "twitter:image:src", content: optimizedImage },
          { name: "twitter:image:alt", content: desc },
          { name: "twitter:creator", content: "@lz__233" },
          { name: "twitter:site", content: "@lz__233" },
          { name: "twitter:card", content: "summary_large_image" },
          { name: "twitter:title", content: title },
          { name: "twitter:description", content: desc },
        ],
      }}
      openGraph={{
        basic: {
          title: title,
          type: "article",
          image: optimizedImage,
          url: canonical,
        },
      }}
    />
  </head>
  <body>
    <div
      un-max-lg="animate-fadein-down"
      un-lg="flex flex-row-reverse justify-between gap-4 px-8 mx-auto max-w-6xl"
      class="container contain-layout m-a"
    >
      <div
        un-lg="sticky top-0 h-screen pt-20 animate-fadein-left gap-2"
        un-lg:flex="~ col justify-between items-start gap-4"
        class="p-7.5"
      >
        <Header />
        <Footer class="max-lg:hidden" />
      </div>
      <main un-lg="py-20 min-w-3xl animate-fadein-down" class="p-7.5">
        <slot />
      </main>
      <Footer class="lg:hidden p-7.5" />
    </div>
  </body>
</html>
